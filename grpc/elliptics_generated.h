// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_ELLIPTICS_H_
#define FLATBUFFERS_GENERATED_ELLIPTICS_H_

#include "flatbuffers/flatbuffers.h"

struct LookupRequest;

struct LookupResponse;

struct LookupRequest FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_KEY = 4
  };
  const flatbuffers::String *key() const {
    return GetPointer<const flatbuffers::String *>(VT_KEY);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_KEY) &&
           verifier.VerifyString(key()) &&
           verifier.EndTable();
  }
};

struct LookupRequestBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_key(flatbuffers::Offset<flatbuffers::String> key) {
    fbb_.AddOffset(LookupRequest::VT_KEY, key);
  }
  explicit LookupRequestBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  LookupRequestBuilder &operator=(const LookupRequestBuilder &);
  flatbuffers::Offset<LookupRequest> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<LookupRequest>(end);
    return o;
  }
};

inline flatbuffers::Offset<LookupRequest> CreateLookupRequest(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::String> key = 0) {
  LookupRequestBuilder builder_(_fbb);
  builder_.add_key(key);
  return builder_.Finish();
}

inline flatbuffers::Offset<LookupRequest> CreateLookupRequestDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const char *key = nullptr) {
  return CreateLookupRequest(
      _fbb,
      key ? _fbb.CreateString(key) : 0);
}

struct LookupResponse FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_VALUE = 4
  };
  const flatbuffers::String *value() const {
    return GetPointer<const flatbuffers::String *>(VT_VALUE);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_VALUE) &&
           verifier.VerifyString(value()) &&
           verifier.EndTable();
  }
};

struct LookupResponseBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_value(flatbuffers::Offset<flatbuffers::String> value) {
    fbb_.AddOffset(LookupResponse::VT_VALUE, value);
  }
  explicit LookupResponseBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  LookupResponseBuilder &operator=(const LookupResponseBuilder &);
  flatbuffers::Offset<LookupResponse> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<LookupResponse>(end);
    return o;
  }
};

inline flatbuffers::Offset<LookupResponse> CreateLookupResponse(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::String> value = 0) {
  LookupResponseBuilder builder_(_fbb);
  builder_.add_value(value);
  return builder_.Finish();
}

inline flatbuffers::Offset<LookupResponse> CreateLookupResponseDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const char *value = nullptr) {
  return CreateLookupResponse(
      _fbb,
      value ? _fbb.CreateString(value) : 0);
}

#endif  // FLATBUFFERS_GENERATED_ELLIPTICS_H_
